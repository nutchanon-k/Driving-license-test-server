// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  firstName   String
  lastName    String
  createdAt   DateTime     @default(now())
  testResults TestResult[]
}

model TestResult {
  id            Int            @id @default(autoincrement())
  userId        Int
  physicalTest  PhysicalTest?
  theoryTest    TheoryTest?
  practicalTest PracticalTest?
  status        TestStatus     @default(PENDING)
  updatedAt     DateTime       @updatedAt
  user          User           @relation(fields: [userId], references: [id])
}

model PhysicalTest {
  id                 Int        @id @default(autoincrement())
  colorBlindTest     Boolean
  visionLongTest     Boolean
  visionTiltTest     Boolean
  reflexResponseTest Boolean
  passed             Boolean
  testResult         TestResult @relation(fields: [testResultId], references: [id])
  testResultId       Int        @unique
}

model TheoryTest {
  id           Int        @id @default(autoincrement())
  trafficSign  Int
  trafficLine  Int
  rightOfWay   Int
  totalScore   Float
  passed       Boolean
  testResult   TestResult @relation(fields: [testResultId], references: [id])
  testResultId Int        @unique
}

model PracticalTest {
  id           Int        @id @default(autoincrement())
  passed       Boolean
  testResult   TestResult @relation(fields: [testResultId], references: [id])
  testResultId Int        @unique
}

enum TestStatus {
  PASSED
  FAILED
  PENDING
}
